services:
    _defaults:
        autowire: true
        autoconfigure: true

    ### Framework ###

    App\Framework\Application\Command\CommandBusInterface: '@App\Framework\Infrastructure\Symfony\Messenger\SymfonyCommandBus'

    App\Framework\Application\Exception\ExceptionTransformerInterface: '@App\Framework\Application\Exception\ExceptionTransformer'

    App\Framework\Application\Exception\ExceptionTransformer: ~

    App\Framework\Application\Query\QueryBusInterface: '@App\Framework\Infrastructure\Symfony\Messenger\SymfonyQueryBus'

    App\Framework\Domain\Model\Event\AggregateEventsBusInterface: '@App\Framework\Infrastructure\Symfony\Messenger\SymfonyAggregateEventBus'

    App\Framework\Domain\Repository\TransactionBoundaryInterface: '@App\Framework\Infrastructure\Doctrine\DbalTransactionBoundary'

    App\Framework\Infrastructure\Doctrine\:
        resource: '../src/Framework/Infrastructure/Doctrine'

    App\Framework\Infrastructure\Symfony\Messenger\SymfonyAggregateEventBus:
        arguments:
            $aggregateEventBus: '@aggregate_event.bus'

    App\Framework\Infrastructure\Symfony\Messenger\SymfonyCommandBus:
        arguments:
            $commandBus: '@command.bus'

    App\Framework\Infrastructure\Symfony\Messenger\SymfonyQueryBus:
        arguments:
            $queryBus: '@query.bus'

    App\Framework\Infrastructure\Symfony\Router\SymfonyInstanceProvider: ~

    App\Framework\UserInterface\ApiProblem\DebuggableExceptionTransformer: ~

    App\Framework\UserInterface\ApiProblem\ExceptionTransformerInterface: '@App\Framework\UserInterface\ApiProblem\DebuggableExceptionTransformer'

    App\Framework\UserInterface\ApiProblem\InstanceProviderInterface: '@App\Framework\Infrastructure\Symfony\Router\SymfonyInstanceProvider'

    ### RaffleDemo ###

    App\RaffleDemo\Raffle\Application\:
        resource: '../src/RaffleDemo/Raffle/Application'

    App\RaffleDemo\Raffle\Domain\Model\Event\RaffleEventFactory: ~

    App\RaffleDemo\Raffle\Domain\Projection\Raffle\RaffleProjector: ~

    App\RaffleDemo\Raffle\Domain\Repository\RaffleEventStoreRepository:
        arguments:
            $eventStore: '@App\RaffleDemo\Raffle\Infrastructure\Postgres\Repository\PostgresRaffleEventStore'

    App\RaffleDemo\Raffle\Domain\Projection\Raffle\RaffleProjectionRepositoryInterface: '@App\RaffleDemo\Raffle\Infrastructure\Postgres\Repository\Projection\PostgresRaffleProjectionRepository'

    App\RaffleDemo\Raffle\Infrastructure\Postgres\Repository\PostgresRaffleEventStore:
        arguments:
            $aggregateEventFactory: '@App\RaffleDemo\Raffle\Domain\Model\Event\RaffleEventFactory'
            $domain: 'raffle'

    App\RaffleDemo\Raffle\Infrastructure\Postgres\Repository\Projection\PostgresRaffleProjectionRepository: ~

    App\RaffleDemo\Raffle\UserInterface\Cli\:
        resource: '../src/RaffleDemo/Raffle/UserInterface/Cli'

    App\RaffleDemo\Raffle\UserInterface\Rest\Error\ApiProblemExceptionListener: ~

    App\RaffleDemo\Raffle\UserInterface\Rest\V1\:
        resource: '../src/RaffleDemo/Raffle/UserInterface/Rest/V1'

    _instanceof:
        App\Framework\Application\Command\CommandHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: command.bus }

        App\Framework\Application\Query\QueryHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: query.bus }

        App\Framework\Domain\Projection\AggregateEventsSubscriberInterface:
            tags:
                - { name: messenger.message_handler, bus: aggregate_event.bus }

when@prod:
    services:
        App\Framework\UserInterface\ApiProblem\ExceptionTransformer:
            arguments:
                $additionalParams: { }

        App\Framework\UserInterface\ApiProblem\ExceptionTransformerInterface: '@App\Framework\UserInterface\ApiProblem\ExceptionTransformer'
